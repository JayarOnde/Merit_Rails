= Merit Rails Gem

Define reputation for users and data on your application.

http://i567.photobucket.com/albums/ss118/DeuceBigglebags/th_nspot26_300.jpg


= Installation

1. Add 'merit' to your Gemfile.
2. Run 'rails g merit:install'
3. Run 'rails g merit MODEL_NAME'
4. Add 'grant_badges' to controllers where you want this behavior triggered.
5. Run 'rake db:migrate'
6. Configure reputation rules for your application:
   * Edit +app/models/merit_badge_rules.rb+ for granting badges
   * Edit +app/models/merit_rank_rules.rb+ for granting rank
   * You may also add badges/rank "by hand" from controller actions:
      Badge.find(3).grant_to(current_user)


= Defining badge rules

You may give badges to any resource on your application if some condition
holds. Badges may have levels, and may be temporary.

+grant_on+ accepts:
* +controller+#+action+ string (similar to Rails routes)
* :+badge+ for badge name
* :+level+ for badge level
* :+to+: method name over target_object which obtains user to badge.
* :+temporary+ (boolean): if the condition doesn't hold and the receiver had
  the badge, it gets removed. +false+ by default (badges are kept forever).
* &+block+
  * empty (always grants)
  * a block which evaluates to boolean (recieves target object as parameter)
  * a block with a hash composed of methods to run on the target object with
    expected values

== Examples

    grant_on 'comments#vote', :badge => 'relevant-commenter', :to => :user do
      { :votes => 5 }
    end

    grant_on 'users#update', :badge => 'autobiographer', :temporary => true do |user|
      user.name.present? && user.address.present?
    end


= Defining rank rules

Rankings are very similar to badges. They give "badges" which have a hierarchy
defined by +level+'s lexicografical order (greater is better). If a rank is
granted, lower level ranks are taken off. 5 stars is a common ranking use
case.

They are not given at specified actions like badges, you should define a cron
job to test if ranks are to be granted.

+set_rank+ accepts:
* +badge_name+ name of this ranking
* :+level+ ranking level (greater is better)
* :+to+ model or scope to check if new rankings apply


== Examples

    set_rank :stars, :level => 2, :to => Commiter.active do |commiter|
      commiter.branches > 1 && commiter.followers >= 10
    end

    set_rank :stars, :level => 3, :to => Commiter.active do |commiter|
      commiter.branches > 2 && commiter.followers >= 20
    end


= Test application

To run the test application inside this gem follow:
1. cd test/dummy
2. rails g merit:install
3. rails g merit user
4. rake db:migrate ; rake db:seed
5. rails s


= To-do list

* grep -r 'FIXME\|TODO' .
* Should allow more than one subject to badge (for example, users and lists are
  "meritable").
* :value parameter (for star voting for example) should be configurable (depends
  on params[:value] on the controller).
* Is it ok a RecordNotFound exception for non existent badge? Could
  grant_to(user) fail (user nil)?
* Can we avoid "grant_badges" call on controllers? Easy to forget, could be a design "smell".
* Make fixtures for integration testing (now creating objects on test file!).
